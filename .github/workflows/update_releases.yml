name: Update Releases in mdBook

on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install requests

      - name: Print all environment variables
        run: env

      # - name: Print GitHub context variables
      #   run: |
      #     echo "GitHub Context:"
      #     echo "${{ toJson(github) }}"

      - name: Set Replacement Text
        id: set-replacement-text
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "REPLACEMENT_TEXT=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "push" ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "REPLACEMENT_TEXT=${{ github.ref_name }} (${SHORT_SHA})" >> $GITHUB_ENV
          fi

      - name: Update version in file
        uses: richardrigutins/replace-in-files@v2
        with:
          files: "theme/header.hbs"
          search-text: "||working tree||"
          replacement-text: ${{ env.REPLACEMENT_TEXT }}

      - name: Debug
        run: cat theme/header.hbs

      - name: Fetch release information
        if: github.event_name == 'release'
        id: fetch_release
        run: |
          RELEASE_NAME=$(jq -r .release.name "$GITHUB_EVENT_PATH")
          RELEASE_BODY=$(jq -r .release.body "$GITHUB_EVENT_PATH")
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "RELEASE_BODY=$RELEASE_BODY" >> $GITHUB_ENV

      - name: "✏️ Generate release changelog"
        id: ext-changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Required

      - name: Append release info to changelog.md
        if: github.event_name == 'release'
        run: |
          cat /github/workspace/CHANGELOG.md
          #echo "${{ steps.ext-changelog.outputs.changelog }}"
          #echo "${{ steps.ext-changelog.outputs.changelog }}" > new_changelog.md
          #echo "## ${{ env.RELEASE_NAME }}" > new_changelog.md
          #echo "${{ env.RELEASE_BODY }}" >> new_changelog.md
          #echo "" >> new_changelog.md
          #cat src/CHANGELOG.md >> new_changelog.md
          cp /github/workspace/CHANGELOG.md src/CHANGELOG.md

      - name: Commit and push changes
        if: github.event_name == 'release'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b update-changelog  # Create a new branch
          git add src/CHANGELOG.md
          git commit -m "Update changelog for release ${{ env.RELEASE_NAME }}"
          git push origin update-changelog:main  # Push to the main branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install mdBook
        uses: extractions/setup-crate@v1
        with:
          repo: rust-lang/mdBook

      - name: Build the book
        run: mdbook build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: build
          publish_dir: ./book
